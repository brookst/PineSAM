---
name: Manually build a release

on:
  workflow_dispatch:
jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-version.outputs.tag }}_test5
      release_url: ${{ steps.release-url.outputs.release_url }}
      name: ${{ steps.get-name.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get version
        id: get-version
        run: |
          echo "tag=v$(cat version.txt)" >> $GITHUB_OUTPUT
      - name: Get name
        id: get-name
        run: |
          echo "name=$(basename ${GITHUB_REPOSITORY})" >> $GITHUB_OUTPUT
      - name: Create Empty GH Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.tag }}
          body: "Test build"
      - name: Output Release URL File
        id: release-url
        run: |
          echo "release_url=${{ steps.create-release.outputs.upload_url }}" >> $GITHUB_OUTPUT
  build:
    name: Build Packages
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            TARGET: Windows
            ARCHITECTURE: x64
            BUILD_CMD: ci/build.ps1
            PACKAGE_CMD: ci/package.ps1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python for ${{matrix.target}}
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies for ${{matrix.target}}
        run: |
          pip install pyinstaller websockets bleak requests winrt-Windows.Foundation.Collections
          pushd ui && npm install && popd
      - name: Build application for ${{matrix.target}}
        run: ${{ matrix.BUILD_CMD }}
      - name: Package application for ${{matrix.TARGET}}
        id: package-app
        run: |
          ${{ matrix.PACKAGE_CMD }} "${{needs.create-release.outputs.name}}-${{matrix.TARGET}}-${{matrix.ARCHITECTURE}}-${{needs.create-release.outputs.tag}}"
      - name: Upload release asset for ${{matrix.target}}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_url}}
          asset_path: ${{ steps.package-app.outputs.asset_path }}
          asset_name: ${{ steps.package-app.outputs.asset_name }}
          asset_content_type: application/zip
